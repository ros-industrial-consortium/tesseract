find_package(GTest REQUIRED)
find_package(tesseract_support REQUIRED)

# Descartes Tesseract Kinematics Test
add_executable(${PROJECT_NAME}_descartes_kin_unit descartes_tesseract_kinematics_tests.cpp)
target_link_libraries(${PROJECT_NAME}_descartes_kin_unit ${GTEST_BOTH_LIBRARIES} ${PROJECT_NAME}_descartes tesseract::tesseract_support)
target_compile_options(${PROJECT_NAME}_descartes_kin_unit PRIVATE -Wsuggest-override -Wconversion -Wsign-conversion)
if(CXX_FEATURE_FOUND EQUAL "-1")
    target_compile_options(${PROJECT_NAME}_descartes_kin_unit PRIVATE -std=c++11)
else()
    target_compile_features(${PROJECT_NAME}_descartes_kin_unit PRIVATE cxx_std_11)
endif()
if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    target_compile_options(${PROJECT_NAME}_descartes_kin_unit PRIVATE -mno-avx)
  else()
    message(WARNING "Non-GNU compiler detected. If using AVX instructions, Eigen alignment issues may result.")
  endif()
target_include_directories(${PROJECT_NAME}_descartes_kin_unit PRIVATE ${GTEST_INCLUDE_DIRS})
if(${CMAKE_VERSION} VERSION_LESS "3.10.0")
    gtest_add_tests(${PROJECT_NAME}_descartes_kin_unit "" AUTO)
else()
    gtest_discover_tests(${PROJECT_NAME}_descartes_kin_unit)
endif()
add_dependencies(${PROJECT_NAME}_descartes_kin_unit ${PACKAGE_LIBRARIES})
add_dependencies(run_tests ${PROJECT_NAME}_descartes_kin_unit)

# OMPL Planning Test/Example Program
add_executable(${PROJECT_NAME}_ompl_unit ompl_planner_tests.cpp)
target_link_libraries(${PROJECT_NAME}_ompl_unit ${Boost_LIBRARIES}${GTEST_BOTH_LIBRARIES} ${PROJECT_NAME}_ompl_freespace tesseract::tesseract_support)
target_compile_options(${PROJECT_NAME}_ompl_unit PRIVATE -Wsuggest-override -Wconversion -Wsign-conversion)
if(CXX_FEATURE_FOUND EQUAL "-1")
    target_compile_options(${PROJECT_NAME}_ompl_unit PRIVATE -std=c++11)
else()
    target_compile_features(${PROJECT_NAME}_ompl_unit PRIVATE cxx_std_11)
endif()
if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    target_compile_options(${PROJECT_NAME}_ompl_unit PRIVATE -mno-avx)
  else()
    message(WARNING "Non-GNU compiler detected. If using AVX instructions, Eigen alignment issues may result.")
  endif()
target_include_directories(${PROJECT_NAME}_ompl_unit PRIVATE ${GTEST_INCLUDE_DIRS})
target_include_directories(${PROJECT_NAME}_ompl_unit SYSTEM PUBLIC
    ${Boost_INCLUDE_DIRS})
if(${CMAKE_VERSION} VERSION_LESS "3.10.0")
    gtest_add_tests(${PROJECT_NAME}_ompl_unit "" AUTO)
else()
    gtest_discover_tests(${PROJECT_NAME}_ompl_unit)
endif()
add_dependencies(${PROJECT_NAME}_ompl_unit ${PACKAGE_LIBRARIES})
add_dependencies(run_tests ${PROJECT_NAME}_ompl_unit)

# TrajOpt Planner Tests
add_executable(${PROJECT_NAME}_trajopt_unit trajopt_planner_tests.cpp)
target_link_libraries(${PROJECT_NAME}_trajopt_unit ${GTEST_BOTH_LIBRARIES} ${PROJECT_NAME}_trajopt tesseract::tesseract_support)
target_compile_options(${PROJECT_NAME}_trajopt_unit PRIVATE -Wsuggest-override -Wconversion -Wsign-conversion)
if(CXX_FEATURE_FOUND EQUAL "-1")
    target_compile_options(${PROJECT_NAME}_trajopt_unit PRIVATE -std=c++11)
else()
    target_compile_features(${PROJECT_NAME}_trajopt_unit PRIVATE cxx_std_11)
endif()
if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    target_compile_options(${PROJECT_NAME}_trajopt_unit PRIVATE -mno-avx)
  else()
    message(WARNING "Non-GNU compiler detected. If using AVX instructions, Eigen alignment issues may result.")
  endif()
target_include_directories(${PROJECT_NAME}_trajopt_unit PRIVATE ${GTEST_INCLUDE_DIRS} tesseract::tesseract_rosutils)
if(${CMAKE_VERSION} VERSION_LESS "3.10.0")
    gtest_add_tests(${PROJECT_NAME}_trajopt_unit "" AUTO)
else()
    gtest_discover_tests(${PROJECT_NAME}_trajopt_unit)
endif()
add_dependencies(run_tests ${PROJECT_NAME}_trajopt_unit)

# Descartes Planner Tests
add_executable(${PROJECT_NAME}_descartes_unit descartes_planner_tests.cpp)
target_link_libraries(${PROJECT_NAME}_descartes_unit ${GTEST_BOTH_LIBRARIES} ${PROJECT_NAME}_descartes tesseract::tesseract_support)
target_compile_options(${PROJECT_NAME}_descartes_unit PRIVATE -Wsuggest-override -Wconversion -Wsign-conversion)
if(CXX_FEATURE_FOUND EQUAL "-1")
    target_compile_options(${PROJECT_NAME}_descartes_unit PRIVATE -std=c++11)
else()
    target_compile_features(${PROJECT_NAME}_descartes_unit PRIVATE cxx_std_11)
endif()
if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    target_compile_options(${PROJECT_NAME}_descartes_unit PRIVATE -mno-avx)
  else()
    message(WARNING "Non-GNU compiler detected. If using AVX instructions, Eigen alignment issues may result.")
  endif()
target_include_directories(${PROJECT_NAME}_descartes_unit PRIVATE ${GTEST_INCLUDE_DIRS} tesseract::tesseract_rosutils)
if(${CMAKE_VERSION} VERSION_LESS "3.10.0")
    gtest_add_tests(${PROJECT_NAME}_descartes_unit "" AUTO)
else()
    gtest_discover_tests(${PROJECT_NAME}_descartes_unit)
endif()
add_dependencies(run_tests ${PROJECT_NAME}_descartes_unit)
